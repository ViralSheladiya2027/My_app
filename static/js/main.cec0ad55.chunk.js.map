{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","tabindex","aria-disabled","style","backgroundColor","color","placeholder","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","replace","letter","split","length","Alert","alert","role","msg","proptype","PropTypes","string","isRequired","aboutText","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cec0ad55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\" href=\"/\" tabindex=\"-1\" aria-disabled=\"true\">About</a>\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\"style= {{backgroundColor: props.mode==='dark'?'#020e1a':'white',color: props.mode==='dark'?'white':'black'}}placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input mx-1\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> EnableDarkMode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  );\r\n}\r\n\r\nNavbar.proptype = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired,\r\n  };\r\n\r\n  Navbar.defaultProps ={\r\n    title :'set title',\r\n    aboutText : \"About text here\"\r\n  }","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase was clicked\"+text)\r\n    let newText = text.toUpperCase();\r\n    props.showAlert(\"Your text has been uppercase\",\"success\");\r\n    setText(newText);\r\n  };\r\n\r\n  const handleloClick = () => {\r\n    // console.log(\"lowercase was clicked\"+text)\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Your text has been lowercase\",\"success\");\r\n  };\r\n\r\n  const handleCapitalClick = () => {\r\n    // console.log(\"capitalized was clicked\"+text)\r\n    let newText = text.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\r\n    setText(newText);\r\n    props.showAlert(\"Your text has been capitalized\",\"success\");\r\n  };\r\n\r\n  const handleSpaceClick = () => {\r\n    // console.log(\"space was clicked\"+text)\r\n    const newText = text.replace(/\\s+/g, ' ');\r\n    setText(newText);\r\n    props.showAlert(\"Your space has been removed\",\"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    // console.log(\"clear was clicked\")\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"your text has been cleared\",\"success\");\r\n  };\r\n\r\n  const handleUpChange = (event) => {\r\n    // console.log(\"on change\")\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\"/>\r\n      <div className=\"container\"style= {{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"textArea\"\r\n            style={{backgroundColor: props.mode==='dark'?'gray':'white',color: props.mode==='dark'?'white':'black'}}\r\n            value={text}\r\n            onChange={handleUpChange}\r\n            rows=\"5\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"button btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          convert to upperCase\r\n        </div>\r\n        <div className=\"button btn btn-primary mx-1\" onClick={handleloClick}>\r\n          convert to lowerCase\r\n        </div>\r\n        <div\r\n          className=\"button btn btn-primary mx-1\" onClick={handleCapitalClick}>\r\n          convert to capitalized case\r\n        </div>\r\n        <div\r\n          className=\"button btn btn-primary mx-1\" onClick={handleSpaceClick}>\r\n         Space case\r\n        </div>\r\n        <div className=\"button btn btn-primary mx-1\" onClick={handleClearClick}>\r\n          clear words\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container my-2\"/>\r\n      <div className=\"container my-2\"style= {{color: props.mode==='dark'?'white':'black'}}>\r\n        <h3>your text summary</h3>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.003 * text.split(\" \").length} minutes read</p>\r\n        <h3>preview</h3>\r\n        {/* <p>{text}</p> */}\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  // const capitalize = (word)=>{\r\n  //  const  lower = word.toLowerCase();\r\n  //     return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n  // }\r\n\r\n  return (\r\n    props.alert &&\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n          </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component, useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\n// import About from \"./components/About\";\nimport Textform  from \"./components/Textform\"; \nimport Alert from \"./components/Alert\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(\"null\")\n\nconst showAlert = (message,type) =>{\n  setAlert({\n    msg:message,\n    type:type,\n  })\n  setTimeout(() => {\n    setAlert(\"null\")\n  }, 3000);\n}\n\n const toggleMode=()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\")\n      document.body.style.backgroundColor=\"#020e1a\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title=\"textutils-Dark Mode\";\n      // setInterval(() => {\n      //   document.title=\"textutils is amazing Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"install textutils now\";\n      // }, 1500);\n    }\n    else{\n      setMode(\"light\")\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title=\"textutils-Light Mode\";\n    }\n  }\n\n  return (\n    <>\n<Navbar  title = \"TextUltils\" mode={mode} toggleMode ={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\" >\n<Textform heading= \"Enter the text to analyze below\"showAlert={showAlert} mode={mode}/>\n{/* <About/> */}\n</div>\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}